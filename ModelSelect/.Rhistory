totalDat = read.table('pichu.csv',header=T, sep=;,;)
totalDat = read.table('pichu.csv',header=T, sep=',')
totalDat = read.table('pichu.csv',header=T, sep=',')
totalDat = read.table('pichu.csv',header=T, sep=',',na.strings="NA")
totalDat = read.table('pichu.csv',header=T, sep=',', fill = true)
totalDat = read.table('pichu.csv',header=T, sep=',', fill = TRUE)
totalDat = read.table('pichu.csv',header=T, sep=',')
totalDat = read.table('pichu.csv',header=T, sep=',', fill = TRUE)
totalDat = read.table('pichu.csv',header=T, sep=',', fill = TRUE,quote="")
sbrDat = totalDat[,totalDat$CAUDATE_R != "NA"]
names(totalDat)
sbrDat = totalDat[totalDat$CAUDATE_R != "NA",]
totalDat[1,]
totalDat[2,]
sbrDat = totalDat[!is.na(totalDat$CAUDATE_R),]
unique(sbrDat$PATNO)
temp = sbrDat[sbrDat$PATNO = 3001,]
temp = sbrDat[sbrDat$PATNO == 3001,]
temp$CAUDATE_R
table(temp$CAUDATE_R)
temp = sbrDat[sbrDat$PATNO == 3002,]
table(temp$CAUDATE_R)
temp = totalDat[totalDat$PATNO == 3002,]
table(temp$CAUDATE_R)
temp = totalDat[totalDat$PATNO == 3000,]
temp
totalDat = read.table('pichu.csv',header=T, sep=',', quote="")
View(temp)
View(totalDat)
totalDat = read.csv('pichu.csv',header=T, sep=',', quote="")
View(totalDat)
totalDat = read.csv('pichu.csv')
View(totalDat)
totalDat = read.csv('pichu.csv')
View(totalDat)
View(totalDat)
temp = totalDat [ totalDat$PATNO ==  3000,]
table(temp$CAUDATE_R)
table(temp$CAUDATE_R[[1]])
table(temp$CAUDATE_R[[1]]) > 0
?which
colSums(temp$CAUDATE_R)
sum(is.na(temp$CAUDATE_R))
source('C:/Users/Jason/Desktop/FeatureSelection/SubsetSelect.R', echo=TRUE)
source('C:/Users/Jason/Desktop/FeatureSelection/SubsetSelect.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document')
source('C:/Users/Jason/Desktop/FeatureSelection/SubsetSelect.R', echo=TRUE)
trimData(totalDat)
source('C:/Users/Jason/Desktop/FeatureSelection/SubsetSelect.R', echo=TRUE)
trimData(totalDat)
nodat = data.frame()
?cbind
names(nodat) = names(totalDat)
nodat = data.frame(matrix(ncol = 365, nrow = 100))
nodat = data.frame(matrix(ncol = 365, nrow = 0))
names(nodat) = names(totalDat)
cbind(nodat,totalDat[1,])
rbind(nodat,totalDat[1,])
totalDat = read.csv('pichu.csv')
source('C:/Users/Jason/Desktop/FeatureSelection/SubsetSelect.R', echo=TRUE)
trimData(totalDat)
source('C:/Users/Jason/Desktop/FeatureSelection/SubsetSelect.R', echo=TRUE)
trimData(totalDat)
source('C:/Users/Jason/Desktop/FeatureSelection/SubsetSelect.R', echo=TRUE)
trimData(totalDat)
totalDat = read.csv('pichu.csv')
View(totalDat)
source('C:/Users/Jason/Desktop/FeatureSelection/SubsetSelect.R', echo=TRUE)
testTrim(trimmedDat)
source('C:/Users/Jason/Desktop/FeatureSelection/SubsetSelect.R', echo=TRUE)
testTrim(trimmedDat)
source('C:/Users/Jason/Desktop/FeatureSelection/SubsetSelect.R', echo=TRUE)
testTrim(trimmedDat)
source('C:/Users/Jason/Desktop/FeatureSelection/SubsetSelect.R', echo=TRUE)
testTrim(trimmedDat)
source('C:/Users/Jason/Desktop/FeatureSelection/SubsetSelect.R', echo=TRUE)
testTrim(trimmedDat)
temp[,2] = NULL
View(finalDat)
temp[3] = NULL
source('C:/Users/Jason/Desktop/FeatureSelection/SubsetSelect.R', echo=TRUE)
testTrim(trimmedDat)
source('C:/Users/Jason/Desktop/FeatureSelection/SubsetSelect.R', echo=TRUE)
source('C:/Users/Jason/Desktop/FeatureSelection/SubsetSelect.R', echo=TRUE)
testTrim(trimmedDat)
source('C:/Users/Jason/Desktop/FeatureSelection/SubsetSelect.R', echo=TRUE)
testTrim(trimmedDat)
source('C:/Users/Jason/Desktop/FeatureSelection/SubsetSelect.R', echo=TRUE)
testTrim(trimmedDat)
source('C:/Users/Jason/Desktop/FeatureSelection/SubsetSelect.R', echo=TRUE)
testTrim(trimmedDat)
source('C:/Users/Jason/Desktop/FeatureSelection/SubsetSelect.R', echo=TRUE)
testTrim(trimmedDat)
trimmedDat[trimmedDat$PATNO == 3000]
trimmedDat[trimmedDat$PATNO == 3000,]
dim(trimmedDat[trimmedDat$PATNO == 3000,])
dim(trimmedDat[trimmedDat$PATNO == 3000,1])
dim(trimmedDat[trimmedDat$PATNO == 3000,c("CAUDATE_R")])
dim(trimmedDat[trimmedDat$PATNO == 3000,])
test=trimmedDat[trimmedDat$PATNO == 3000,]
test= test[,2]
source('C:/Users/Jason/Desktop/FeatureSelection/SubsetSelect.R', echo=TRUE)
testTrim(trimmedDat)
source('C:/Users/Jason/Desktop/FeatureSelection/SubsetSelect.R', echo=TRUE)
testTrim(trimmedDat)
remove(nodat,temp)
test=trimmedDat[trimmedDat$PATNO == 3000,]
test=test[,5]
sum(is.na(test))
dim(test)[1]
dim(test)
length(test)
source('C:/Users/Jason/Desktop/FeatureSelection/SubsetSelect.R', echo=TRUE)
testTrim(trimmedDat)
source('C:/Users/Jason/Desktop/FeatureSelection/SubsetSelect.R', echo=TRUE)
testTrim(trimmedDat)
source('C:/Users/Jason/Desktop/FeatureSelection/SubsetSelect.R', echo=TRUE)
testTrim(trimmedDat)
source('C:/Users/Jason/Desktop/FeatureSelection/SubsetSelect.R', echo=TRUE)
testTrim(trimmedDat)
is.factor(totalDat$PATNO)
levels(totalDat$PATNO)
totalDat$PATNO = as.factor(totalDat$PATNO)
levels(totalDat$PATNO)
source('C:/Users/Jason/Desktop/FeatureSelection/SubsetSelect.R', echo=TRUE)
testTrim(trimmedDat)
View(finalDat)
temp = totalDat[totalDat$PATNO == 3000,]
temp = temp[,5]
source('C:/Users/Jason/Desktop/FeatureSelection/SubsetSelect.R', echo=TRUE)
testTrim(trimmedDat)
is.factor(totalDat$PATNO)
source('C:/Users/Jason/Desktop/FeatureSelection/SubsetSelect.R', echo=TRUE)
testTrim(trimmedDat)
source('C:/Users/Jason/Desktop/FeatureSelection/SubsetSelect.R', echo=TRUE)
testTrim(trimmedDat)
temp = totalDat[,3]
temp = totalDat[,4]
source('C:/Users/Jason/Desktop/FeatureSelection/SubsetSelect.R', echo=TRUE)
source('C:/Users/Jason/Desktop/FeatureSelection/SubsetSelect.R', echo=TRUE)
testTrim(trimmedDat)
source('C:/Users/Jason/Desktop/FeatureSelection/SubsetSelect.R', echo=TRUE)
testTrim(trimmedDat)
View(trimmedDat)
source('C:/Users/Jason/Desktop/FeatureSelection/SubsetSelect.R', echo=TRUE)
testTrim(trimmedDat)
source('C:/Users/Jason/Desktop/FeatureSelection/SubsetSelect.R', echo=TRUE)
testTrim(trimmedDat)
source('C:/Users/Jason/Desktop/FeatureSelection/SubsetSelect.R', echo=TRUE)
testTrim(trimmedDat)
write.table('trimmedDat.csv')
write.table(trimmedDat, file ='trimmedDat.csv')
write.table(trimmedDat, file ='trimmedDat.csv',sep=',')
load("C:/Users/cit-labs/Downloads/FeatureSelection/FeatureSelection/.RData")
testTrim(trimmedDat)
remove(finalDat, sbrDat, totalDat, trimmedDat)
remove(temp,test)
dat= read.csv('Nonmotor_Motor_Imaging_FilteredColumns.csv')
dat= read.csv('FinalSelectFields.csv')
dat= read.csv('FinalSelectedFields.csv')
names(dat)
predictors= names(dat)[2:length(names(dat))]
predictors= names(dat)[2:length(names(dat))-6]
predictors= names(dat)[2:(length(names(dat))-6]
predictors= names(dat)[2:(length(names(dat))-6)]
predictors
predictors= names(dat)[2:(length(names(dat))-6),(length(names(dat))-1):(length(names(dat)))]
predictors= names(dat)[2:(length(names(dat))-6),(length(names(dat))-1):length(names(dat))]
predictors
?split
x=[1,2,3,4,5,6,7,8,9,10]
x=c(1,2,3,4,5,6,7,8,9,10)
split(x,3)
?subset
library(caret)
install.packages("caret")
library(caret)
library(caret)
?createFolds
createFolds(dat,10,TRUE)
warnings()
createFolds(dat,5,TRUE,returnTrain=FALSE)
?cvFolds
createFolds(dat,5,FALSE,returnTrain=FALSE)
createFolds(dat,5,FALSE)
warnings()
list = 1:5
id <- sample(1:k,nrow(data),replace=TRUE)
id <- sample(1:5,nrow(data),replace=TRUE)
id <- sample(1:5,nrow(dat),replace=TRUE)
dat = read.csv('FinalSelectedFields.csv')
?errorest
?predict
View(dat)
errorList[1] = errorList[1] + 1
x= c(2,4,6,8,10)
x/5
x=numeric(0)
x[1] = 1
x[2] = 1
x[2] = 1CAUDATE_L
CAUDATE_L
is.character(CAUDATE_L)
x=c(3,1,4,5,7,12)
min(X)
min(x)
match(min(x),x)
x
x[-2]
source('C:/Users/cit-labs/Desktop/FeatureSelection/FeatureSelection/modelSelect.R', echo=TRUE)
source('C:/Users/cit-labs/Desktop/FeatureSelection/FeatureSelection/modelSelect.R', echo=TRUE)
modelSelect(dat)
modelSelect(dat,5,3)
source('C:/Users/cit-labs/Desktop/FeatureSelection/FeatureSelection/modelSelect.R', echo=TRUE)
modelSelect(dat,5,3)
source('C:/Users/cit-labs/Desktop/FeatureSelection/FeatureSelection/modelSelect.R', echo=TRUE)
modelSelect(dat,5,3)
remainingPreds= names(dat)[2:(length(names(dat))-6)]
dim(remainingPreds)
length(remainingPreds)
remainingPreds(1)
remainingPreds(1)
remainingPreds[2]
source('C:/Users/cit-labs/Desktop/FeatureSelection/FeatureSelection/modelSelect.R', echo=TRUE)
remainingPreds[2]
modelSelect(dat,5,3)
form = as.formula('DIAGNOSIS ~ CAUDATE_R + CAUDATE_L + PUTAMEN_R + PUTAMEN_L + CAUDATE_ASYMMETRY + PUTAMEN_ASYMMETRY')
form
form = as.formula(form + remainingPreds[3])
form = as.formula(form + '' + remainingPreds[3])
form = as.formula(form  + as.formula(remainingPreds[3])
form = as.formula(form  + as.formula(remainingPreds[3]))
form = as.formula(form  + as.formula(remainingPreds[3]))
form = as.formula(form  + as.character(remainingPreds[3]))
source('C:/Users/cit-labs/Desktop/FeatureSelection/FeatureSelection/modelSelect.R', echo=TRUE)
modelSelect(dat,5,3)
modelSelect(dat,5,3)
baseFormula
?update
form
update(form, .~.,as.formula(remainingPreds[2]))
update(form, .~.,+as.formula(remainingPreds[2]))
update(form, .~.+as.formula(remainingPreds[2]))
test=update(form, .~.+as.formula(remainingPreds[2]))
test
as.formula(test)
form
?update.formula
update.formula(form, ~. )
update.formula(form, ~. +)
update.formula(form, ~. + T)
as.formula(remainingPreds[2])
as.character(remainingPreds[2])
update.formula(form, ~. + as.character(remainingPreds[2]))
p=as.character(remainingPreds[2])
form + p
as.character(form) + p
as.character(form) & p
paste(form,p)
paste(form)
paste0(form)
source('C:/Users/cit-labs/Desktop/FeatureSelection/FeatureSelection/modelSelect.R', echo=TRUE)
modelSelect(dat,5,3)
source('C:/Users/cit-labs/Desktop/FeatureSelection/FeatureSelection/modelSelect.R', echo=TRUE)
modelSelect(dat,5,3)
remainingPreds= names(dat)[2:(length(names(dat))-6)]
remainingPreds
names(dat)
source('C:/Users/cit-labs/Desktop/FeatureSelection/FeatureSelection/modelSelect.R', echo=TRUE)
modelSelect(dat,5,3)
source('C:/Users/cit-labs/Desktop/FeatureSelection/FeatureSelection/modelSelect.R', echo=TRUE)
modelSelect(dat,5,3)
source('C:/Users/cit-labs/Desktop/FeatureSelection/FeatureSelection/modelSelect.R', echo=TRUE)
modelSelect(dat,5,3)
source('C:/Users/cit-labs/Desktop/FeatureSelection/FeatureSelection/modelSelect.R', echo=TRUE)
modelSelect(dat,5,3)
basePreds = c("CAUDATE_R", "CAUDATE_L", "PUTAMEN_R", "PUTAMEN_L", "CAUDATE_ASYMMETRY", "PUTAMEN_ASYMMETRY")
as.formula(paste("DIAGNOSIS~",paste(basePreds,collapse="+")))
paste("DIAGNOSIS~",paste(basePreds,collapse="+"))
paste(paste("DIAGNOSIS~",paste(basePreds,collapse="+")),'+',remainingPreds[3])
source('C:/Users/cit-labs/Desktop/FeatureSelection/FeatureSelection/modelSelect.R', echo=TRUE)
modelSelect(dat,5,3)
source('C:/Users/cit-labs/Desktop/FeatureSelection/FeatureSelection/modelSelect.R', echo=TRUE)
modelSelect(dat,5,3)
source('C:/Users/cit-labs/Desktop/FeatureSelection/FeatureSelection/modelSelect.R', echo=TRUE)
modelSelect(dat,5,3)
source('C:/Users/cit-labs/Desktop/FeatureSelection/FeatureSelection/modelSelect.R', echo=TRUE)
modelSelect(dat,5,3)
source('C:/Users/cit-labs/Desktop/FeatureSelection/FeatureSelection/modelSelect.R', echo=TRUE)
modelSelect(dat,5,3)
source('C:/Users/cit-labs/Desktop/FeatureSelection/FeatureSelection/modelSelect.R', echo=TRUE)
modelSelect(dat,5,3)
remove(basePreds)
modelSelect(dat,5,3)
print(basePreds)
dat= read.csv('FinalSelectedFields.csv')
dat
remainingPreds= names(dat)[3:(length(names(dat))-6)]
remainingsPreds
remainingPreds
dat$DIAGNOSIS = gsub('PD',1,dat$DIAGNOSIS)
for ( i in 1:dim(dat)[1]) {}
for ( i in 1:dim(dat)[1]) {
dat$DIAGNOSIS = gsub('PD',1,dat$DIAGNOSIS)
dat$DIAGNOSIS = gsub('HD',0,dat$DIAGNOSIS)
}
for ( i in 1:dim(dat)[1]) {
dat$DIAGNOSIS[i] = gsub('PD',1,dat$DIAGNOSIS[i])
dat$DIAGNOSIS[i] = gsub('HD',0,dat$DIAGNOSIS[i])
}
View(dat)
names(dat)[2] = "DIAGNOSIS"
View(dat)
for ( i in 1:dim(dat)[1]) {
dat$DIAGNOSIS[i] = gsub('PD',1,dat$DIAGNOSIS[i])
dat$DIAGNOSIS[i] = gsub('HD',0,dat$DIAGNOSIS[i])
}
for ( i in 1:dim(dat)[1]) {
dat$DIAGNOSIS = gsub('PD',1,dat$DIAGNOSIS)
dat$DIAGNOSIS = gsub('HD',0,dat$DIAGNOSIS)
}
View(dat)
dat= read.csv('FinalSelectedFields.csv')
View(dat)
names(dat)[2] = "DIAGNOSIS"
dat$DIAGNOSIS[dat$DIAGNOSIS == 'PD'] <-
1
dat= read.csv('FinalSelectedFields.csv')
names(dat)[2] = "DIAGNOSIS"
dat$DIAGNOSIS = gsub('PD',1,dat$DIAGNOSIS)
View(dat)
View(dat)
dat$DIAGNOSIS = gsub('HC',0,dat$DIAGNOSIS)
View(dat)
source('C:/Users/cit-labs/Desktop/FeatureSelection/FeatureSelection/modelSelect.R', echo=TRUE)
modelSelect(dat,5,3)
remainingPreds= names(dat)[3:(length(names(dat))-6)]
remainingPreds
modelSelect(dat,5,3)
modelSelect(dat,5,3)
as.formula(paste(paste("DIAGNOSIS~",paste(basePreds,collapse="+")),'+',remainingPreds[m]))
as.formula(paste(paste("DIAGNOSIS~",paste(basePreds,collapse="+")),'+',remainingPreds[3]))
dat= read.csv('FinalSelectedFields.csv')
source('C:/Users/cit-labs/Desktop/FeatureSelection/FeatureSelection/modelSelect.R', echo=TRUE)
modelSelect(dat,5,3)
dat= read.csv('FinalSelectedFields.csv')
dat
View(dat)
remainingPreds= names(dat)[3:(length(names(dat))-6)]
remainingPreds
source('C:/Users/cit-labs/Desktop/FeatureSelection/FeatureSelection/modelSelect.R', echo=TRUE)
modelSelect(dat,5,3)
source('C:/Users/cit-labs/Desktop/FeatureSelection/FeatureSelection/modelSelect.R', echo=TRUE)
modelSelect(dat,5,3)
source('C:/Users/cit-labs/Desktop/FeatureSelection/FeatureSelection/modelSelect.R', echo=TRUE)
modelSelect(dat,5,3)
source('C:/Users/cit-labs/Desktop/FeatureSelection/FeatureSelection/modelSelect.R', echo=TRUE)
formulas[[1]]
a = list(10)
a[1]
remove(form,i,id,list,p,predictors,test,x)
a = list(12,2)
a = list(10,2)
a = list(10)
a = list(rep(0,10))
a = list(0,0,0,0,0)
a[1]
a[[1]]
as.formula(paste(paste("DIAGNOSIS~",paste(basePreds,collapse="+")),'+',remainingPreds[4]))
a[[1]]as.formula(paste(paste("DIAGNOSIS~",paste(basePreds,collapse="+")),'+',remainingPreds[4]))
a[[1]]=as.formula(paste(paste("DIAGNOSIS~",paste(basePreds,collapse="+")),'+',remainingPreds[4]))
a[[1]]
b= list()
length(b) = 4
source('C:/Users/cit-labs/Desktop/FeatureSelection/FeatureSelection/modelSelect.R', echo=TRUE)
source('C:/Users/cit-labs/Desktop/FeatureSelection/FeatureSelection/modelSelect.R', echo=TRUE)
install.packages("ROCR")
library(rocr)
library(ROCR)
source('C:/Users/cit-labs/Desktop/FeatureSelection/FeatureSelection/modelSelect.R', echo=TRUE)
modelSelect(dat,5,3)
modelSelect(dat,5,3,10)
modelSelect(dat,3,3,10)
paste(basePreds,sep=',')
paste(basePreds,sep='+')
paste0(basePreds,sep='+')
paste0(basePreds,collapse='+')
modelSelect(dat,1,3,10)
modelSelect(dat,2,3,10)
allModelFormulas = list()
length(allModelFormulas) = numPreds
allModelFormulas = list()
length(allModelFormulas) = 10
allModelFormulas[1]
allModelFormulas[1]=1
allModelFormulas[[1]]=1
allModelFormulas
test <<- rep('', numPreds)
test <<- rep('', 10)
test[1] = 2
test[1]
source('C:/Users/cit-labs/Desktop/FeatureSelection/FeatureSelection/modelSelect.R', echo=TRUE)
modelSelect(dat,1,3,10)
modelSelect(dat,2,3,10)
?runif
source('C:/Users/cit-labs/Desktop/FeatureSelection/FeatureSelection/modelSelect.R', echo=TRUE)
modelSelect(dat,2,3,10)
install.packages("pROC")
library(pROC)
?roc
?data
?roc
allModelFormulas[[1]]
source('C:/Users/cit-labs/Desktop/FeatureSelection/FeatureSelection/modelSelect.R', echo=TRUE)
modelSelect(dat,2,3,10)
allModelFormulas[[1]]
roc(DIAGNOSIS ~ CAUDATE_R + CAUDATE_L + PUTAMEN_R + PUTAMEN_L + CAUDATE_ASYMMETRY +
PUTAMEN_ASYMMETRY + NHY)
data(dat)
modelNNet = nnet(as.formula(paste(paste("DIAGNOSIS~",paste(basePreds,collapse="+")),'+',predToAdd)) ,
data = trainSet, size = nnetSize, rang = 0.4, decay = 5e-4, maxit = 300, trace = FALSE)
source('~/.active-rstudio-document', echo=TRUE)
source('C:/Users/cit-labs/Desktop/FeatureSelection/FeatureSelection/modelSelect.R', echo=TRUE)
modelSelect(dat,2,3,10)
source('C:/Users/cit-labs/Desktop/FeatureSelection/FeatureSelection/modelSelect.R', echo=TRUE)
modelSelect(dat,2,3,10)
source('C:/Users/cit-labs/Desktop/FeatureSelection/FeatureSelection/modelSelect.R', echo=TRUE)
modelSelect(dat,2,3,10)
allModelFormulas[[3]]
source('C:/Users/cit-labs/Desktop/FeatureSelection/FeatureSelection/modelSelect.R', echo=TRUE)
modelSelect(dat,2,3,10)
names(dat) =="NHY"
datwithoutNHY = dat[, -which(names(dat) %in% c("NHY")]
datwithoutNHY = dat[, -which(names(dat) %in% c("NHY"))]
modelSelect(datwithoutNHY,2,3,10)
dat = read.csv('FinalSelectedFields.csv')
modelSelect(dat,2,3,10)
modelSelect(dat,2,3,10)
sbrdat = read.csv('NMIB_ByVisit.csv')
sbrdat = read.csv('NMIB_ByVisits.csv')
relevantnames = c(names(sbrdat)[2:4], names(sbrdat)[substr(names(sbrdat),1,3)=='NP3'],names(sbrdat)[318:323])
trimmedDat = sbrDat[,relevantnames]
trimmedDat = sbrdat[,relevantnames]
trimmedDat = trimmedDat[trimmedDat$EVENT_ID == 'SC' & trimmedDat$RECRUIMENT_CAT == 'PD',]
pcadat = trimmedDat[,c(-1:-3)]
res = prcomp(scale(pcadat))
trimmedDat = sbrDat[,relevantnames]
trimmedDat = sbrdat[,relevantnames]
names(trimmedDat)
trimmedDat = trimmedDat[trimmedDat$EVENT_ID == 'SC' & trimmedDat$RECRUITMENT_CAT == 'PD',]
pcadat = trimmedDat[,c(-1:-3)]
res = prcomp(scale(pcadat))
res$rotation[,(1:2)]
remove(sbrdat, pcadat, trimmedDat)
